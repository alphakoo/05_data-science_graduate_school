# -*- coding: utf-8 -*-
"""데이터과학프로그래밍 13주차 과제 제출용(구대현).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l7bvcNQoBODtrXT1eefgJ9UyvA7jtKmj

## [HW#1] 위 프로그램에서 Customer ID가 5000 이상이면서, Sale Amout가 2000 이상인 행만 필터링해서 파일에 기록하기

원래 데이터에서 customer_id가 5000 이상인 데이터는 2개 있으나,


sale_amount 데이터 중에서 2000 이상인 데이터는 없어서 기록되는 값은 없음!
"""

from datetime import date
from xlrd import open_workbook
from xlrd import xldate_as_tuple
from xlwt import Workbook

# 읽어 올 엑셀 파일 경로
input_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/sales_2013.xlsx'

# 새로 생성 할 엑셀 파일 경로 및 파일 이름
output_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/output_ds_w13.xls'

# excel 파일에 쓰기 위한 객체 생성
output_workbook = Workbook()

# 파일 쓰기 객체에 새로운 워크시트 하나 추가
output_worksheet = output_workbook.add_sheet('Jan_2013_output')

# 판매량이 기록된 셀의 열 번호-4번째
sale_amount_column_index = 3

# customer_id의 열 번호
cutomer_id_clumn_index = 0

# 읽어 올 input_file을 열어서 workbook이라고 이름을 짓고
with open_workbook(input_file) as workbook:

    # input_file의 'january_2013' 워크시트를 가져와서
    worksheet = workbook.sheet_by_name('january_2013')

    # 기록할 리스트 생성
    data = []

    # 첫 번째 행의 값을 header에 저장
    header = worksheet.row_values(0)

    # 추가
    data.append(header)

    for row_index in range(1, worksheet.nrows):

        row_list = []

        # 판매량 가져오기 
        sale_amount = worksheet.cell_value(row_index, sale_amount_column_index)

        # customer_id 가져오기
        customer_id = worksheet.cell_value(row_index, cutomer_id_clumn_index)

        # print(f"before loop >> (customer, sale) >> ({customer_id}, {sale_amount})")
        # customer id 500 이상, sale_amount 2000 이상인 행만 필터링
        if sale_amount > 2000 and customer_id > 5000:

            for column_index in range(worksheet.ncols):

                cell_value = worksheet.cell_value(row_index, column_index)
                cell_type = worksheet.cell_type(row_index, column_index)
                
                # 날짜 데이터 기록
                if cell_type == 3:
                        date_cell = xldate_as_tuple(cell_value,workbook.datemode)
                        date_cell = date(*date_cell[0:3]).strftime('%m/%d/%Y')
                        row_list.append(date_cell)
                # 그 외 기록
                else:
                    row_list.append(cell_value)

        if row_list:
            data.append(row_list)

    # 행 번호, 열 번호에 맞게 입력하기 위해서 이 줄이 필요!
    for list_index, output_list in enumerate(data):

        for element_index, element in enumerate(output_list):

            output_worksheet.write(list_index, element_index, element)

output_workbook.save(output_file)

"""## [HW#2] 위의 프로그램에서 아래 코드가 필요한 이유는?
#####	for list_index, output_list in enumerate(data):
#####		for element_index, element in enumerate(output_list):
#####			output_worksheet.write(list_index, element_index, element)

data에 들어간 데이터들은 행 단위로 각 셀별로 나뉘어져 있다. 

이를 기록하기 위해서는 이중 반복문 안에서 

각 행을 기록하면서 그 셀을 하나씩 기록해야 한다. 

이를 위해서 enumerate를 써서 각 행과 열의 index별로 기록하는 것이다. 

좌표처럼 1행 0열, 1행 1열, 1행, 2열

2행 0열, 2행 1열, 2행 2열  이렇게 기록하기 위해서 위의 코드가 필요하다!

## [HW#3] 위의 프로그램에서 invoice number가 100-0016, 100-0017인 행만 필터링

* january_2013 워크시트에서는 조건에 해당하는 데이터가 없어서 march_2013에서 조건에 맞는 데이터를 필터링 해서 기록하였음
"""

from datetime import date
from xlrd import open_workbook
from xlrd import xldate_as_tuple
from xlwt import Workbook

# 읽어 올 엑셀 파일 경로
input_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/sales_2013.xlsx'

# 새로 생성 할 엑셀 파일 경로 및 파일 이름
output_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/output_ds_w13.xls'

# excel 파일에 쓰기 위한 객체 생성
output_workbook = Workbook()

# 파일 쓰기 객체에 새로운 워크시트 하나 추가
output_worksheet = output_workbook.add_sheet('Mar_2013_output')

# invoice number을 기준으로 필터링
invoice_number = ['100-0016', '100-0017']

# invoice number열
invoice_number_column_index = 2

# 읽어 올 input_file을 열어서 workbook이라고 이름을 짓고
with open_workbook(input_file) as workbook:

    # input_file의 'march_2013' 워크시트를 가져와서
    worksheet = workbook.sheet_by_name('march_2013')

    # 기록할 리스트 생성
    data = []

    # 첫 번째 행의 값을 header에 저장
    header = worksheet.row_values(0)

    # 추가
    data.append(header)

    for row_index in range(1, worksheet.nrows):

        # invoice_number을 하나씩 가져와서
        invoice_data = worksheet.cell_value(row_index, invoice_number_column_index)

        row_list = []

        # invoice data 데이터가 invoice number에 있는 값이라면 기록
        if invoice_data in invoice_number:
            
            for column_index in range(worksheet.ncols):

                cell_value = worksheet.cell_value(row_index, column_index)
                cell_type = worksheet.cell_type(row_index, column_index)
                
                # 날짜 데이터 기록
                if cell_type == 3:
                        date_cell = xldate_as_tuple(cell_value,workbook.datemode)
                        date_cell = date(*date_cell[0:3]).strftime('%m/%d/%Y')
                        row_list.append(date_cell)
                # 그 외 기록
                else:
                    row_list.append(cell_value)

        if row_list:
            data.append(row_list)

    # 행 번호, 열 번호에 맞게 입력하기 위해서 이 줄이 필요!
    for list_index, output_list in enumerate(data):

        for element_index, element in enumerate(output_list):

            output_worksheet.write(list_index, element_index, element)

output_workbook.save(output_file)

"""## [HW#4] 위의 프로그램에서 모든 워크시트의 invoice number가 100-0015이상이면서, Sale Amount가 2000 이상인 행만 필터링하기"""

from datetime import date
from xlrd import open_workbook
from xlrd import xldate_as_tuple
from xlwt import Workbook

# 읽어 올 엑셀 파일 경로
input_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/sales_2013.xlsx'

# 새로 생성 할 엑셀 파일 경로 및 파일 이름
output_file = '/content/drive/MyDrive/[00]데이터사이언스 대학원/22년 1학기 데이터과학 프로그래밍/output_ds_w13.xls'

# excel 파일에 쓰기 위한 객체 생성
output_workbook = Workbook()

# 파일 쓰기 객체에 새로운 워크시트 하나 추가
output_worksheet = output_workbook.add_sheet('result_worksheet')

# sale_amount 열 번호
sale_amount_column_index = 3

# invoice_number 열 번호
invoice_number_column_index = 2

# 첫 시트 확인
first_worksheet = True

# 읽어 올 input_file을 열어서 workbook이라고 이름을 짓고
with open_workbook(input_file) as workbook:

    # 기록할 리스트 생성
    data = []

    for worksheet in workbook.sheets():

        # 첫 시트, 첫 행만 header로 기록
        if first_worksheet:

            header_row = worksheet.row_values(0)

            data.append(header_row)

            first_worksheet = False

        for row_index in range(1, worksheet.nrows):

            row_list = []

            # 판매량 가져오기 
            sale_amount = worksheet.cell_value(row_index, sale_amount_column_index)

            # invoice_number 가져오기
            invoice_number = worksheet.cell_value(row_index, invoice_number_column_index)

            # 판매량 2000 이상 and invoice_number 100-0015 이상 데이터
            if sale_amount > 2000 and invoice_number > '100-0015':

                # print(f'(invoice_number, sale_amount) >> ({invoice_number},{sale_amount})')

                for column_index in range(worksheet.ncols):

                    cell_value = worksheet.cell_value(row_index, column_index)
                    cell_type = worksheet.cell_type(row_index, column_index)
                    
                    # 날짜 데이터 기록
                    if cell_type == 3:
                            date_cell = xldate_as_tuple(cell_value,workbook.datemode)
                            date_cell = date(*date_cell[0:3]).strftime('%m/%d/%Y')
                            row_list.append(date_cell)
                    # 그 외 기록
                    else:
                        row_list.append(cell_value)

            if row_list:
                data.append(row_list)

    # 행 번호, 열 번호에 맞게 입력하기 위해서 이 줄이 필요!
    for list_index, output_list in enumerate(data):

        for element_index, element in enumerate(output_list):

            output_worksheet.write(list_index, element_index, element)

output_workbook.save(output_file)
